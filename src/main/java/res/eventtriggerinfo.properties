AndPreReqs.default=NONE
AndPreReqs.desc=List of technologies that player must have for the trigger to activate. These requirements are And requirements - that is, all the listed technologies must be known
BonusesRequired.default=NONE
BonusesRequired.desc=List of bonuses, one of which must be on the plot for the trigger to fire. You can specify that the plot must not have any bonuses through the use of the value NO_BONUS. To ignore improvements the tag must not be present
BuildingsRequired.default=NONE
BuildingsRequired.desc=List of building classes that must be present for the trigger to fire
Civic.default=NO_CIVIC
Civic.desc=A player must be running this civic for the trigger to fire
CorporationsRequired.default=NONE
CorporationsRequired.desc=List of corporations, one of which must be present for the trigger to fire.  For triggers that affect a city, the corporation must be present in the city. For triggers not affecting a city, the corporation must be present anywhere in the civilization. 
Events.default=NONE
Events.desc=This, ladies and gentlemen, is the holy grail of the trigger XML file. Here event identifiers from Civ4EventInfos.xml are listed that denote the events triggered by this particular trigger. Note that each choice is also technically an event - therefore, for events that have choices, multiple identifiers will be listed. Take a look at the slave revolt event example\: 
FeaturesRequired.default=NONE
FeaturesRequired.desc=List of features, one of which must be on the plot for the trigger to fire. You can specify that the plot must not have any features through the use of the value NO_FEATURE. To ignore features the tag must not be present
ImprovementsRequired.default=NONE
ImprovementsRequired.desc=List of improvements, one of which must be on the plot for the trigger to fire. You can specify that the plot must not have any improvements through the use of the value NO_IMPROVEMENT. To ignore improvements the tag must not be present
MinDifficulty.default=NO_DIFFICULTY
MinDifficulty.desc=Minimum game difficulty level that the trigger will fire in
ObsoleteTechs.default=NONE
ObsoleteTechs.desc=List of technologies that obsolete the trigger, making it in-eligible to activate. If multiple technologies are listed, having any of those will invalidate the trigger for that player.
OrPreReqs.default=NONE
OrPreReqs.desc=List of technologies that player must have for the trigger to activate. These requirements are Or requirements - that is, only one technology of the listed ones is required
OtherPlayerHasTech.default=NO_TECH
OtherPlayerHasTech.desc=Specifies the technology that the other player must have for the trigger to activate.
PrereqEvents.default=NONE
PrereqEvents.desc=This lists the events that must have already happened for this trigger to possibly activate. There are two main uses. One is to simply specify conditional triggers.
PrereqTrait.default=NO_TRAIT
PrereqTrait.desc=Name of a trait that the player must have for the trigger to fire
PythonCallback.default=
PythonCallback.desc=The name of the Python function which is called when the trigger activates. Don't confuse with <PythonCallback> in event descriptions in Civ4EventInfos.xml, which is the function which gets called when the event happens. 
PythonCanDo.default=
PythonCanDo.desc=The name of the Python function which is executed to check whether the trigger can be triggered. 
PythonCanDoCity.default=
PythonCanDoCity.desc=The name of the Python function which checks whether a city is eligible to be picked by the trigger. 
PythonCanDoUnit.default=
PythonCanDoUnit.desc=The name of the Python function which checks whether a unit is eligible to be picked by the trigger. 
ReligionsRequired.default=NONE
ReligionsRequired.desc=List of religions, one of which must be present for the trigger to fire.  For triggers that affect a city, the religions must be present in the city. For triggers not affecting a city, the religion must be present anywhere in the civilization. 
RoutesRequired.default=NONE
RoutesRequired.desc=List of routes, one of which must be on the plot for the trigger to fire. You can specify that the plot must not have any routes through the use of the value NO_ROUTE. To ignore improvements the tag must not be present
TerrainsRequired.default=NONE
TerrainsRequired.desc=List of terrains, the plot must be one of these for the trigger to fire. To ignore terrains the tag must not be present
TriggerTexts.default=NONE
TriggerTexts.desc=Text strings that are tied to the era that the event is triggered in
Type.default=
Type.desc=The internal name of this EventTrigger
UnitsRequired.default=NONE
UnitsRequired.desc=List of unit classes that must be present for the trigger to fire
WorldNewsTexts.default=NONE
WorldNewsTexts.desc=Text string identifier, which specifies the text to be displayed to all players when the event occurs
bGlobal.default=0
bGlobal.desc=If true, applies to all players. That means that, when triggered for one player, it's considered to have triggered for all players. Combined with <bRecurring> set to 0, it will result in triggers that can only happen once per game.
bHeadquarters.default=0
bHeadquarters.desc=If true, and <bPickCorporation> is 1 then the player must own the corporation's headquarters in order for it to be picked. If the trigger also picks a city, then the picked city must be the corporation headquarters. Works like <bHolyCity> does for religions
bHolyCity.default=0
bHolyCity.desc=If true, and <bPickReligion> is 1, then the player must own the religion's holy city in order for it to be picked. If the trigger also picks a city, then the picked city must be the religion's holy city. For example, if <bPickReligion>, <bStateReligion>, <bHolyCity> are all 1 and the trigger picks a city (<bPickCity> is also 1), then the city picked will be the holy city of the player's state religion, provided he owns that city.
bOtherPlayerAI.default=0
bOtherPlayerAI.desc=If true, then the other player must be an AI player.
bOtherPlayerHasOtherReligion.default=0
bOtherPlayerHasOtherReligion.desc=If true, the other player must have a different religion than the picked one. If <bStateReligion> is 1, then the other player's state religion must be different.
bOtherPlayerHasReligion.default=0
bOtherPlayerHasReligion.desc=If true, then the other player must have the religion picked by the trigger (see <bPickReligion>). If <bStateReligion> is 0, then the other player must have the religion somewhere in his empire. If <bStateReligion> is 1, then the other player must have the same state religion. 
bOtherPlayerWar.default=0
bOtherPlayerWar.desc=If true, then the trigger can activate when the affected player and the other player are at war. When set to 1, the trigger activates for player pairs at peace
bOwnPlot.default=0
bOwnPlot.desc=If true, the plot must be owned by the player for the trigger to fire
bPickCity.default=0
bPickCity.desc=If true, then the trigger will pick a city. 
bPickCorporation.default=0
bPickCorporation.desc=If true, then a corporation will be picked by the trigger. The corporation must be present in the player's civilization to be picked
bPickOtherPlayerCity.default=0
bPickOtherPlayerCity.desc=If true, then the trigger will pick one of the other player's cities. 
bPickPlayer.default=0
bPickPlayer.desc=If true, then the trigger will pick another player to affect by the event. This is how events that give stuff to other players or affect relations with them are created. The specific player who gets selected can be further narrowed down by the six tags starting with [bi]OtherPlayer.
bPickReligion.default=0
bPickReligion.desc=If true, the trigger will pick a religion for the events that it activates. Which religion is picked can be further specified by the other variables
bPrereqEventPlot.default=0
bPrereqEventPlot.desc=For triggers that have PrereqEvents specified, if set to 1, means that the trigger will fire on the same plot where the prerequisite events fired. This is used with triggers such as continuing slave revolts or dustbowls - if the prerequisite event has fired, dustbowl or revolts will, if triggered, happen again in the same place where they did before. 
bProbabilityBuildingMultiply.default=0
bProbabilityBuildingMultiply.desc=If true, the probability of the trigger firing increases with each additional building. Only used in conjunction with iNumBuildings.
bProbabilityUnitMultiply.default=0
bProbabilityUnitMultiply.desc=If true, the probability of the trigger firing increases with each additional unit. Only used in conjunction with &lt;iNumUnits&gt;
bRecurring.default=0
bRecurring.desc=If true,  the trigger can activate multiple times throughout the game for the same player. If set to 0, it can only activate once per player. Note that the <ClearEvents> field in event description can reset events, making the game forget they have occurred.
bShowPlot.default=0
bShowPlot.desc=If true, then the plot in which the event happens will be visually highlighted.
bSinglePlayer.default=0
bSinglePlayer.desc=If true, the event can only trigger in single player games
bStateReligion.default=0
bStateReligion.desc=If true, and <bPickReligion> is 1, then the affected player's state religion will be picked.
bTeam.default=0
bTeam.desc=If true,  the trigger applies to all players on the same team.
bUnitsOnPlot.default=0
bUnitsOnPlot.desc=If true, the trigger will only fire if the player has units on the plot
iAngry.default=0
iAngry.desc=Minimum anger level of a city for the trigger to fire. Only applicable when the target is a city
iCityFoodWeight.default=0
iCityFoodWeight.desc=Acts as a probability multiplier for the food stored in a city. That is, for triggers that pick a city, cities with more food stored will have a higher probability of being picked as iCityFoodWeight increases. 1 is a sane value to prioritize cities with a lot of food stored. 
iMaxOurLandmass.default=-1
iMaxOurLandmass.desc=Maximum number of land areas (islands or continents) the player has cities on for the trigger to fire. A value of -1 is taken to mean unlimited.
iMaxPopulation.default=0
iMaxPopulation.desc=Maximum population player must have for the trigger to fire
iMinMapLandmass.default=0
iMinMapLandmass.desc=Minimum number of land areas (islands or continents) that must be on the map for the trigger to fire
iMinOurLandmass.default=0
iMinOurLandmass.desc=Minimum number of land areas (islands or continents) the player has cities on for the trigger to fire
iMinPopulation.default=0
iMinPopulation.desc=Minimum population player must have for the trigger to fire
iMinTreasury.default=0
iMinTreasury.desc=Minimum gold player must have for the trigger to fire
iNumBuildings.default=0
iNumBuildings.desc=Used in conjunction with <BuildingsRequired>. Set to 1 to indicate that 1 building of that type is required in a city, for city-picking events. 
iNumBuildingsGlobal.default=0
iNumBuildingsGlobal.desc=Specifies the minimum amount of buildings listed in <BuildingsRequired> that the player must have in total for the trigger to activate
iNumCorporations.default=0
iNumCorporations.desc=Specifies how many of the corporations listed in <CorporationsRequired> must be present for the trigger to activate. If <CorporationsRequired> has been left empty, then any corporations will do. For example, for a trigger that affects a city, if <CorporationsRequired> is empty and <iNumCorporations> is 2, then cities with at least different 2 corporations in them will be eligible for the trigger. 
iNumPlotsRequired.default=0
iNumPlotsRequired.desc=Should be set to 1 for triggers that require a plot that meets specific conditions.
iNumReligions.default=0
iNumReligions.desc=Specifies how many of the religions listed in <ReligionsRequired> must be present for the trigger to activate. If <ReligionsRequired> has been left empty, then any religions will do. For example, for a trigger that affects a city, if <ReligionsRequired> is empty and <iNumReligions> is 2, then cities with at least different 2 religions in them will be eligible for the trigger. 
iNumUnits.default=0
iNumUnits.desc=Specifies the amount of units that must be on a plot for the trigger to activate - used for events which pick a plot. If used in conjunction with <UnitsRequired>, only units of the listed classes will be counted
iNumUnitsGlobal.default=0
iNumUnitsGlobal.desc=Specifies the amount of units that the player must have for the trigger to activate. If used in conjunction with <UnitsRequired>, only units of the listed classes will be counted
iOtherPlayerShareBorders.default=0
iOtherPlayerShareBorders.desc=Minimum amount of land plots that the affected player and the other player must have along the border (adjacent to one another).
iPercentGamesActive.default=0
iPercentGamesActive.desc=Percentage chance that the event that this triggers will be in the game. When a new game is started each trigger is checked to see whether it is present in the game or not.
iPlotType.default=-1
iPlotType.desc=Specifies the plot type that the plot must have to meet the condition. Set to -1 to ignore plot type. 0 stands for peaks (PLOT_PEAK), 1 for hills (PLOT_HILLS), 2 for land plots (PLOT_LAND) and 3 for ocean plots (PLOT_OCEAN)
iUnhealthy.default=0
iUnhealthy.desc=Minimum unhealthiness level of a city for the trigger to fire. Only applicable when the target is a city
iUnitDamagedWeight.default=0
iUnitDamagedWeight.desc=Affects the probability of the trigger activating for wounded units. The value is multiplied by the units damage to determine the final trigger weight so higher values make the trigger more likely to fire for wounded units
iUnitDistanceWeight.default=0
iUnitDistanceWeight.desc=For events that affect a plot, affects the probability of the trigger activating for wounded units. The value is multiplied by the units distance to the plot to determine the final trigger weight so higher values make the trigger more likely to fire for far away units
iUnitExperienceWeight.default=0
iUnitExperienceWeight.desc=Affects the probability of the trigger activating for experienced units. The value is multiplied by the units experience to determine the final trigger weight so higher values make the trigger more likely to fire for experienced unitsWhen set to 1, increases the probability of triggering for a highly-experienced unit
iWeight.default=0
iWeight.desc=Relative probability that this event will be triggered if all its prereqs are met. If this is set to -1 it will always trigger when it can. If it is higher than 0 then the valid trigger with the highest value will be fired.
